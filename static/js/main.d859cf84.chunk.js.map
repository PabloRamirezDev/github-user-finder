{"version":3,"sources":["components/AppHeader.tsx","components/AppFooter.tsx","components/SearchForm.tsx","components/UserPreview.tsx","components/SearchResults.tsx","models/GithubUser.ts","components/Search.tsx","components/UserInfo.tsx","components/UserRepositories.tsx","components/UserOrganizations.tsx","components/User.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","link","color","textDecoration","title","fontWeight","letterSpacing","AppHeader","classes","AppBar","position","Toolbar","Container","fixed","to","className","Typography","variant","root","width","padding","container","display","justifyContent","anchor","fontSize","transitionDuration","AppFooter","href","target","rel","flexDirection","alignItems","margin","input","button","SearchForm","props","user","setUser","handleSearch","onSubmit","e","preventDefault","TextField","label","fullWidth","value","onChange","Button","type","onClick","a","startIcon","size","UserPreview","ListItem","component","Link","login","ListItemAvatar","Avatar","alt","src","avatar_url","ListItemText","primary","Divider","count","showing","fontStyle","textAlign","pagination","SearchResults","results","page","handlePageNavigation","Pagination","Math","ceil","List","map","result","index","GithubUserPreview","url","html_url","repos_url","organizations_url","this","Search","useState","query","setQuery","setResults","resultCount","setResultCount","resultsWereReceived","setResultsWereReceived","resultsPage","setResultsPage","queryWasSent","setQueryWasSent","axios","get","q","data","items","total_count","console","error","useEffect","CircularProgress","theme","avatar","height","name","username","UserInfo","bio","UserRepositories","repos","Paper","elevation","length","repo","secondary","description","UserOrganizations","orgs","org","split","User","setRepos","setOrgs","urlName","useParams","log","qRepos","qOrgs","minHeight","App","CssBaseline","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d859cf84.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\n// Material UI Components\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  link: {\r\n    color: \"#efefef\",\r\n    textDecoration: \"none\",\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    letterSpacing: \"1px\"\r\n  }\r\n});\r\n\r\nconst AppHeader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Container fixed>\r\n          <Link to=\"/\" className={classes.link}>\r\n            <Typography variant=\"h5\" className={classes.title}>Github User Finder</Typography>\r\n          </Link>\r\n        </Container>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    padding: \"2rem 0\"\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  anchor: {\r\n    textDecoration: \"none\",\r\n    color: \"#383838\",\r\n    fontSize: \"1.1rem\",\r\n    transitionDuration: \"0.3s\",\r\n    \"&:hover\": {\r\n      color: \"#656565\"\r\n    }\r\n  },\r\n});\r\n\r\nconst AppFooter = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <footer className={classes.root}>\r\n      <Container fixed className={classes.container}>\r\n        <a\r\n          href=\"https://github.com/PabloRamirezDev\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          className={classes.anchor}\r\n        >\r\n          Created by Pablo Ramírez Dev\r\n        </a>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default AppFooter;\r\n","// Material UI Components\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    margin: \"50px 0\",\r\n  },\r\n  input: {\r\n    margin: \"15px\",\r\n  },\r\n  button: {\r\n    width: \"35%\",\r\n  },\r\n  \"@media(max-width: 420px)\": {\r\n    root: {\r\n      flexDirection: \"column\",\r\n    },\r\n    button: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n});\r\n\r\nconst SearchForm = (props: {\r\n  user: string;\r\n  setUser: React.Dispatch<React.SetStateAction<string>>;\r\n  handleSearch: () => void;\r\n}) => {\r\n  const { user, setUser, handleSearch } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <TextField\r\n        label=\"Github Username\"\r\n        fullWidth\r\n        value={user}\r\n        onChange={(e) => setUser(e.target.value)}\r\n        className={classes.input}\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        onClick={async (e) => {\r\n          e.preventDefault();\r\n          await handleSearch();\r\n        }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        startIcon={<SearchIcon />}\r\n        size=\"large\"\r\n        className={classes.button}\r\n      >\r\n        Search\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { GithubUserPreview } from \"../models/GithubUser\";\r\n\r\nconst UserPreview = ({ user }: { user: GithubUserPreview }) => {\r\n  return (\r\n    <>\r\n      <ListItem button component={Link} to={`/user/${user.login}`}>\r\n        <ListItemAvatar>\r\n          <Avatar alt={user.login} src={user.avatar_url} />\r\n        </ListItemAvatar>\r\n        <ListItemText primary={user.login} />\r\n      </ListItem>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPreview;\r\n","// Custom Components\r\n\r\nimport UserPreview from \"./UserPreview\";\r\n\r\n// Material UI Components\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n// Type Models\r\n\r\nimport { GithubUserPreview } from \"../models/GithubUser\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    \"& > *\": {\r\n      width: \"100%\",\r\n      margin: \"30px 0\"\r\n    }\r\n  },\r\n  count: {\r\n    fontWeight: \"lighter\"\r\n  },\r\n  showing: {\r\n    fontWeight: \"lighter\",\r\n    fontStyle: \"italic\",\r\n    textAlign: \"end\"\r\n  },\r\n  pagination: {\r\n    \"& > *\": {\r\n      justifyContent: \"center\"\r\n    }\r\n  }\r\n});\r\n\r\nconst SearchResults = ({\r\n  results,\r\n  count,\r\n  page,\r\n  handlePageNavigation,\r\n}: {\r\n  results: GithubUserPreview[];\r\n  count: number;\r\n  page: number;\r\n  handlePageNavigation: (e: React.ChangeEvent<unknown>, page: number) => void;\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <p className={classes.count}>\r\n        {count === 0\r\n          ? \"There were no results for your search :(\"\r\n          : count === 1\r\n          ? \"We found 1 result for your search!\"\r\n          : `We found ${count} results for your search${\r\n              count > 1000 ? \", but only the 1000 first results are available\" : \"\"\r\n            }!`}\r\n      </p>\r\n      <p className={classes.showing}>\r\n        Showing results {(page - 1) * 10 + 1} -{\" \"}\r\n        {count < page * 10 ? count : page * 10} / {count}\r\n      </p>\r\n      <Pagination\r\n        count={count > 1000 ? 100 : Math.ceil(count / 10)}\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        page={page}\r\n        onChange={handlePageNavigation}\r\n        className={classes.pagination}\r\n      />\r\n      <List>\r\n        {results.map((result, index) => (\r\n          <UserPreview user={result} key={index} />\r\n        ))}\r\n      </List>\r\n      <Pagination\r\n        count={count > 1000 ? 100 : Math.ceil(count / 10)}\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        page={page}\r\n        onChange={handlePageNavigation}\r\n        className={classes.pagination}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","export interface GithubUserPreview {\r\n  login: string;\r\n  avatar_url: string;\r\n  url: string;\r\n  html_url: string;\r\n  repos_url: string;\r\n  organizations_url: string;\r\n}\r\n\r\nexport class GithubUserPreview {\r\n    constructor() {\r\n        this.login = '';\r\n        this.avatar_url = '';\r\n        this.url = '';\r\n        this.html_url = '';\r\n        this.repos_url = '';\r\n        this.organizations_url = '';\r\n    }\r\n    login: string;\r\n    avatar_url: string;\r\n    url: string;\r\n    html_url: string;\r\n    repos_url: string;\r\n    organizations_url: string; \r\n}\r\n\r\nexport interface GithubUser extends GithubUserPreview {\r\n  name: string;\r\n  location: string;\r\n  bio: string;\r\n  public_repos: number;\r\n  followers: number;\r\n  following: number;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Custom Components\r\n\r\nimport SearchForm from \"./SearchForm\";\r\nimport SearchResults from \"./SearchResults\";\r\n\r\n// Material UI Components\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// Type Models\r\n\r\nimport { GithubUserPreview } from \"../models/GithubUser\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    \"& > *\": {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"bolder\",\r\n    fontSize: \"3rem\",\r\n    letterSpacing: \"2px\"\r\n  },\r\n});\r\n\r\nconst Search = () => {\r\n  const classes = useStyles();\r\n\r\n  // Search Page State\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const [results, setResults] = useState([new GithubUserPreview()]);\r\n  const [resultCount, setResultCount] = useState(0);\r\n  const [resultsWereReceived, setResultsWereReceived] = useState(false);\r\n  const [resultsPage, setResultsPage] = useState(1);\r\n  const [queryWasSent, setQueryWasSent] = useState(false);\r\n\r\n  // Event Handlers\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      setQueryWasSent(true);\r\n      setResultsWereReceived(false);\r\n      const q = await axios.get(\r\n        `https://api.github.com/search/users?q=${query}&per_page=10&page=${resultsPage}`\r\n      );\r\n      setResults(q.data.items);\r\n      setResultCount(q.data.total_count);\r\n      setResultsWereReceived(true);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handlePageNavigation = (\r\n    e: React.ChangeEvent<unknown>,\r\n    page: number\r\n  ) => {\r\n    setResultsPage(page);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Updating data when page changes\r\n    if (resultsWereReceived) {\r\n      handleSearch();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [resultsPage]);\r\n\r\n  return (\r\n    <Container fixed className={classes.root}>\r\n      {!resultsWereReceived ? (\r\n        <h1 className={classes.title}>Search for a Github User</h1>\r\n      ) : null}\r\n      <SearchForm user={query} setUser={setQuery} handleSearch={handleSearch} />\r\n      {queryWasSent ? (\r\n        resultsWereReceived ? (\r\n          <SearchResults\r\n            count={resultCount}\r\n            results={results}\r\n            page={resultsPage}\r\n            handlePageNavigation={handlePageNavigation}\r\n          />\r\n        ) : (\r\n          <CircularProgress />\r\n        )\r\n      ) : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","// Material UI Components\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      textAlign: \"center\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      \"& > *\": {\r\n        margin: \"10px 0\",\r\n      },\r\n    },\r\n    avatar: {\r\n      height: \"300px\",\r\n      width: \"300px\",\r\n      margin: \"40px 0\",\r\n    },\r\n    name: {\r\n      fontSize: \"2rem\",\r\n      fontWeight: \"bolder\",\r\n    },\r\n    username: {\r\n      color: \"#888\",\r\n    },\r\n  };\r\n});\r\n\r\nconst UserInfo = ({ user }: { user: any }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Avatar\r\n        alt={user.name}\r\n        src={user.avatar_url}\r\n        className={classes.avatar}\r\n      />\r\n      <h1 className={classes.name}>{user.name}</h1>\r\n      <h2 className={classes.username}>{user.login}</h2>\r\n      <p>{user.bio}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","// Material UI Components\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst UserRepositories = ({ repos }: { repos: any[] }) => {\r\n  return (\r\n    <Paper elevation={5}>\r\n      <h3>Repositories</h3>\r\n      {repos[0] === null ? (\r\n        <CircularProgress />\r\n      ) : repos.length !== 0 ? (\r\n        <List>\r\n          {repos.map((repo, index) => {\r\n            return (\r\n              <ListItem button component=\"a\" href={repo.html_url} key={index}>\r\n                <ListItemText\r\n                  primary={repo.name}\r\n                  secondary={repo.description}\r\n                />\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      ) : (\r\n        <p>It seems this user has no repositories...</p>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default UserRepositories;\r\n","// Material UI Components\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst UserOrganizations = ({ orgs }: { orgs: any[] }) => {\r\n\r\n  return (\r\n    <Paper elevation={5}>\r\n      <h3>Organizations</h3>\r\n      {orgs[0] === null ? (\r\n        <CircularProgress />\r\n      ) : orgs.length !== 0 ? (\r\n        <List>\r\n          {orgs.map((org, index) => {\r\n            return (\r\n              <ListItem\r\n                button\r\n                component=\"a\"\r\n                href={`https://github.com/${org.login}`} // Writing the base URL to avoid more API calls than needed\r\n                key={index}\r\n              >\r\n                <ListItemAvatar>\r\n                  <Avatar src={org.avatar_url} alt={org.login} />\r\n                </ListItemAvatar>\r\n                <ListItemText primary={org.login} secondary={org.description} />\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      ) : (\r\n        <p>\r\n          It seems this user has no organizations...\r\n        </p>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default UserOrganizations;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n// Custom Components\r\n\r\nimport UserInfo from \"./UserInfo\";\r\nimport UserRepositories from \"./UserRepositories\";\r\nimport UserOrganizations from \"./UserOrganizations\";\r\n\r\n// Material UI Components\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  split: {\r\n    \"& > *\": {\r\n      padding: \"20px\",\r\n      margin: \"15px 0\"\r\n    },\r\n    \"& > * > h3\": {\r\n      fontSize: \"1.4rem\",\r\n      textAlign: \"center\",\r\n    },\r\n    \"& > * > p\": {\r\n      textAlign: \"center\",\r\n      margin: \"30px 0\",\r\n      color: \"#777\"\r\n    }\r\n  },\r\n  \"@media(min-width:960px)\": {\r\n    split: {\r\n      margin: \"40px 0\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      width: \"100%\",\r\n      \"& > *\": {\r\n        width: \"50%\",\r\n        margin: \"0 10px\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst User = () => {\r\n  const classes = useStyles();\r\n\r\n  // User Page State\r\n  const [user, setUser] = useState<any>(null); // User data from API\r\n  const [repos, setRepos] = useState<any[]>([null]); // Repositories data from API\r\n  const [orgs, setOrgs] = useState<any[]>([null]); // Organizations data from API\r\n\r\n  const { urlName } = useParams<{ urlName: string }>(); // Get the user name from the url parameter\r\n\r\n  useEffect(() => {\r\n    // Load user data when page loads\r\n    (async () => {\r\n      try {\r\n        const q = await axios.get(`https://api.github.com/users/${urlName}`);\r\n        setUser(q.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, [urlName]);\r\n\r\n  useEffect(() => {\r\n    // Load repositories and organizations when user data is received\r\n    (async () => {\r\n      try {\r\n        const qRepos = await axios.get(user.repos_url + \"?per_page=10\");\r\n        const qOrgs = await axios.get(user.organizations_url + \"?per_page=10\");\r\n        setRepos(qRepos.data);\r\n        setOrgs(qOrgs.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, [user]);\r\n\r\n  return (\r\n    <Container fixed className={classes.root}>\r\n      {user === null ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <>\r\n          <UserInfo user={user} />\r\n          <div className={classes.split}>\r\n            <UserRepositories repos={repos} />\r\n            <UserOrganizations orgs={orgs} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\n// Custom Components\n\nimport AppHeader from \"./components/AppHeader\";\nimport AppFooter from \"./components/AppFooter\";\nimport Search from \"./components/Search\";\nimport User from \"./components/User\";\n\n// Material UI Components\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <Router>\n      <CssBaseline />\n      <div className={classes.root}>\n        <AppHeader />\n        <Switch>\n          <Route path=\"/user/:urlName\">\n            <User />\n          </Route>\n          <Route exact path=\"/\">\n            <Search />\n          </Route>\n          <Route path=\"/\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n        <AppFooter />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}